{"ast":null,"code":"var _jsxFileName = \"/home/matheuslrd/Documentos/Projetos-Pessoais/YourWallet/your-wallet/src/pages/Wallet.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../Components/Header';\nimport Form from '../Components/Form';\nimport Table from '../Components/Table';\nimport { addCurrencies, addExpenses, updateTotalExpenses } from '../actions';\nimport './wallet.css';\n\nclass Wallet extends Component {\n  constructor() {\n    super();\n    this.updateTotalValue = this.updateTotalValue.bind(this);\n    this.handleAddExpenses = this.handleAddExpenses.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação'\n    };\n  }\n\n  componentDidMount() {\n    this.fetchingValuesCurrencys();\n  }\n\n  async fetchingValuesCurrencys() {\n    const {\n      addCurrenciesDispatch\n    } = this.props;\n    const fetching = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const fetchingJson = await fetching.json();\n    const currencies = Object.keys(fetchingJson).filter(currency => currency !== 'USDT');\n    addCurrenciesDispatch(currencies);\n    return fetchingJson;\n  }\n\n  handleChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async handleAddExpenses() {\n    const {\n      state,\n      props: {\n        addExpensesDispatch,\n        expenses\n      }\n    } = this;\n    const currencys = await this.fetchingValuesCurrencys();\n    addExpensesDispatch({\n      id: expenses.length,\n      ...state,\n      exchangeRates: { ...currencys\n      }\n    });\n    this.updateTotalValue(currencys);\n  }\n\n  updateTotalValue(currencys) {\n    const {\n      value,\n      currency\n    } = this.state;\n    const {\n      updateTotalExpensesDispatch,\n      totalExpenses\n    } = this.props;\n    const valueCoinSelected = currencys[currency].ask;\n    const valueMultiplyCoinSelected = Number((value * valueCoinSelected).toFixed([2]));\n    console.log(valueMultiplyCoinSelected);\n    updateTotalExpensesDispatch(totalExpenses + valueMultiplyCoinSelected);\n  }\n\n  render() {\n    const {\n      props: {\n        email,\n        currencies,\n        totalExpenses\n      },\n      state: {\n        value,\n        description,\n        currency,\n        method,\n        tag\n      }\n    } = this;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      className: \"wallet-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      email: email,\n      totalExpenses: totalExpenses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"container-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      currencies: currencies,\n      onChange: this.handleChange,\n      value: value,\n      description: description,\n      currency: currency,\n      method: method,\n      tag: tag,\n      onClick: this.handleAddExpenses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"tables-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nWallet.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  totalExpenses: PropTypes.number.isRequired,\n  addExpensesDispatch: PropTypes.func.isRequired,\n  addCurrenciesDispatch: PropTypes.func.isRequired,\n  updateTotalExpensesDispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.user.email,\n    expenses: state.wallet.expenses,\n    currencies: state.wallet.currencies,\n    totalExpenses: state.wallet.totalExpenses\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addExpensesDispatch: state => dispatch(addExpenses(state)),\n    addCurrenciesDispatch: currencies => dispatch(addCurrencies(currencies)),\n    updateTotalExpensesDispatch: totalExpenses => dispatch(updateTotalExpenses(totalExpenses))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);","map":{"version":3,"sources":["/home/matheuslrd/Documentos/Projetos-Pessoais/YourWallet/your-wallet/src/pages/Wallet.jsx"],"names":["React","Component","PropTypes","connect","Header","Form","Table","addCurrencies","addExpenses","updateTotalExpenses","Wallet","constructor","updateTotalValue","bind","handleAddExpenses","handleChange","state","value","description","currency","method","tag","componentDidMount","fetchingValuesCurrencys","addCurrenciesDispatch","props","fetching","fetch","fetchingJson","json","currencies","Object","keys","filter","target","name","setState","addExpensesDispatch","expenses","currencys","id","length","exchangeRates","updateTotalExpensesDispatch","totalExpenses","valueCoinSelected","ask","valueMultiplyCoinSelected","Number","toFixed","console","log","render","email","propTypes","string","isRequired","arrayOf","shape","number","func","mapStateToProps","user","wallet","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../Components/Header';\nimport Form from '../Components/Form';\nimport Table from '../Components/Table';\nimport { addCurrencies, addExpenses, updateTotalExpenses } from '../actions';\nimport './wallet.css';\n\nclass Wallet extends Component {\n  constructor() {\n    super();\n\n    this.updateTotalValue = this.updateTotalValue.bind(this);\n    this.handleAddExpenses = this.handleAddExpenses.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n  }\n\n  componentDidMount() {\n    this.fetchingValuesCurrencys();\n  }\n\n  async fetchingValuesCurrencys() {\n    const { addCurrenciesDispatch } = this.props;\n    const fetching = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const fetchingJson = await fetching.json();\n    const currencies = Object.keys(fetchingJson).filter(\n      (currency) => (currency !== 'USDT'),\n    );\n    addCurrenciesDispatch(currencies);\n    return fetchingJson;\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  async handleAddExpenses() {\n    const {\n      state,\n      props: { addExpensesDispatch, expenses },\n    } = this;\n    const currencys = await this.fetchingValuesCurrencys();\n\n    addExpensesDispatch(\n      { id: expenses.length, ...state, exchangeRates: { ...currencys } },\n    );\n    this.updateTotalValue(currencys);\n  }\n\n  updateTotalValue(currencys) {\n    const { value, currency } = this.state;\n    const { updateTotalExpensesDispatch, totalExpenses } = this.props;\n    const valueCoinSelected = currencys[currency].ask;\n    const valueMultiplyCoinSelected = Number((value * valueCoinSelected).toFixed([2]));\n    console.log(valueMultiplyCoinSelected);\n    updateTotalExpensesDispatch(totalExpenses + valueMultiplyCoinSelected);\n  }\n\n  render() {\n    const { props: { email, currencies, totalExpenses }, state: {\n      value,\n      description,\n      currency,\n      method,\n      tag,\n    } } = this;\n\n    return (\n      <main className=\"wallet-page\">\n        <Header email={ email } totalExpenses={ totalExpenses } />\n        <section className=\"container-form\">\n          <Form\n            currencies={ currencies }\n            onChange={ this.handleChange }\n            value={ value }\n            description={ description }\n            currency={ currency }\n            method={ method }\n            tag={ tag }\n            onClick={ this.handleAddExpenses }\n          />\n        </section>\n        <section className=\"tables-container\">\n          <Table />\n        </section>\n      </main>\n    );\n  }\n}\n\nWallet.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  totalExpenses: PropTypes.number.isRequired,\n  addExpensesDispatch: PropTypes.func.isRequired,\n  addCurrenciesDispatch: PropTypes.func.isRequired,\n  updateTotalExpensesDispatch: PropTypes.func.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.user.email,\n    expenses: state.wallet.expenses,\n    currencies: state.wallet.currencies,\n    totalExpenses: state.wallet.totalExpenses,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addExpensesDispatch: (state) => dispatch(addExpenses(state)),\n    addCurrenciesDispatch: (currencies) => dispatch(addCurrencies(currencies)),\n    updateTotalExpensesDispatch: (totalExpenses) => dispatch(\n      updateTotalExpenses(totalExpenses),\n    ),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n"]},"metadata":{},"sourceType":"module"}